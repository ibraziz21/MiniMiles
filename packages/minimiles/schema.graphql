type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  spender: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type ParticipantJoined @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint256
  participant: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RaffleClosed @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RandomnessRequested @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint256
  witnetBlock: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoundCreated @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint256
  startTime: BigInt! # uint256
  endTime: BigInt! # uint256
  rewardPool: BigInt! # uint256
  rewardToken: Bytes! # address
  maxTickets: BigInt! # uint256
  ticketCostPoints: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type WinnerSelected @entity(immutable: true) {
  id: Bytes!
  roundId: BigInt! # uint256
  winner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
